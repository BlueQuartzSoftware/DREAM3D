include(GenerateExportHeader)
include(GNUInstallDirs)

set(COMPLEX_PLUGIN_NAME "@PLUGIN_NAME@")

PROJECT(${COMPLEX_PLUGIN_NAME}
    VERSION 0.0.1
    DESCRIPTION "@PLUGIN_NAME@"
)

set(PLUGIN_GENERATED_DIR ${PROJECT_BINARY_DIR}/generated)
set(PLUGIN_GENERATED_HEADER_DIR ${PROJECT_BINARY_DIR}/generated/${COMPLEX_PLUGIN_NAME})
set(PLUGIN_EXPORT_HEADER ${PLUGIN_GENERATED_HEADER_DIR}/${COMPLEX_PLUGIN_NAME}_export.hpp)

#------------------------------------------------------------------------------
# Plugin Headers
set(${COMPLEX_PLUGIN_NAME}_Plugin_HDRS
    ${${COMPLEX_PLUGIN_NAME}_SOURCE_DIR}/${COMPLEX_PLUGIN_NAME}Plugin.hpp
@FILTER_HEADER_LIST@
)

#------------------------------------------------------------------------------
# Plugin Headers
set(${COMPLEX_PLUGIN_NAME}_Plugin_SRCS
    ${${COMPLEX_PLUGIN_NAME}_SOURCE_DIR}/${COMPLEX_PLUGIN_NAME}Plugin.cpp
@FILTER_SOURCE_LIST@
)

add_library(${COMPLEX_PLUGIN_NAME} SHARED)
set_target_properties(${COMPLEX_PLUGIN_NAME} PROPERTIES
    FOLDER "Plugins/${COMPLEX_PLUGIN_NAME}"
    SUFFIX ".complex"
    LIBRARY_OUTPUT_DIRECTORY $<TARGET_FILE_DIR:complex>/Plugins
    RUNTIME_OUTPUT_DIRECTORY $<TARGET_FILE_DIR:complex>/Plugins
)
# if(APPLE)
#   set_target_properties(${COMPLEX_PLUGIN_NAME} PROPERTIES
#     LIBRARY_OUTPUT_DIRECTORY $<TARGET_FILE_DIR:complex>/complex_test.app/Contents/Plugins/${COMPLEX_PLUGIN_NAME}
#     RUNTIME_OUTPUT_DIRECTORY $<TARGET_FILE_DIR:complex>/complex_test.app/Contents/Plugins/${COMPLEX_PLUGIN_NAME}
#   )
# endif()
target_link_libraries(${COMPLEX_PLUGIN_NAME} PUBLIC complex)

generate_export_header(${COMPLEX_PLUGIN_NAME}
  EXPORT_FILE_NAME ${PLUGIN_EXPORT_HEADER}
)
set(${COMPLEX_PLUGIN_NAME}_GENERATED_HEADERS
  ${PLUGIN_EXPORT_HEADER}
)
set(${COMPLEX_PLUGIN_NAME}_ALL_HDRS
  ${${COMPLEX_PLUGIN_NAME}_Plugin_HDRS}
  ${${COMPLEX_PLUGIN_NAME}_GENERATED_HEADERS}
)

target_sources(${COMPLEX_PLUGIN_NAME}
  PUBLIC
    ${${COMPLEX_PLUGIN_NAME}_ALL_HDRS}
  PRIVATE
    ${${COMPLEX_PLUGIN_NAME}_Plugin_SRCS}
)

target_include_directories(${COMPLEX_PLUGIN_NAME}
    PUBLIC
    $<BUILD_INTERFACE:${${COMPLEX_PLUGIN_NAME}_SOURCE_DIR}/src>
    $<BUILD_INTERFACE:${PLUGIN_GENERATED_DIR}>
    $<BUILD_INTERFACE:${COMPLEX_BINARY_DIR}/Plugins/${COMPLEX_PLUGIN_NAME}>
)

install(TARGETS ${COMPLEX_PLUGIN_NAME}
    PUBLIC_HEADER DESTINATION include/${COMPLEX_PLUGIN_NAME}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
        COMPONENT   ${COMPLEX_PLUGIN_NAME}_Runtime
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        COMPONENT   ${COMPLEX_PLUGIN_NAME}_Runtime
        NAMELINK_COMPONENT ${COMPLEX_PLUGIN_NAME}_Development
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        COMPONENT   ${COMPLEX_PLUGIN_NAME}_Development
)
