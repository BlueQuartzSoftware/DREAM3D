/*!

@page surfacemeshing Surface Meshing

 1. VTK File  name and location of the .vtk file that will be used in the surface meshing
@li a.  This can be any of the volumes created in the reconstruction tab or the
synthetic builder tab.  It only reads the grain ids block from any of those files.

2.  Output Directory  this is the location that all of the output files will be
written to
@li a.  The output file is a .vtk file of poly data

3.  Smooth Surface Mesh  this is an option to smooth the surface mesh that is
output from the marching cubes portion of the tab.  Currently this option is not
functional is under development with CMU.

@section dev_1  Intermediate Files

The surface meshing module creates some intermediate files that are written in
binary form to help keep the memory to a minimum during the meshing process. Those
files are the <i>Nodes</i> file and the <i>Triangles</i> file. The format of each
one is as follows:

@subsection dev_nodes_file Nodes File

The nodes file is made up of n number of nodes where each node has the following
fields:
@li Node ID; 4 Byte Unsigned Int
@li Node Kind: 4 Byte Unsigned Int
@li X Pos: 8 Byte Floating Point number
@li Y Pos: 8 Byte Floating Point number
@li Z Pos: 8 Byte Floating Point number
 The total byte count of each Node Record is 32 bytes


@subsection dev_trifile Triangle File

The Triangle file is made up of Triangle Records where each record is make up of
the following fields:

@li ID: The triangle ID
@li N1: The first Node's index into the Nodes Array
@li N2: The second Node's index into the Nodes Array
@li N3: The third Node's index into the Nodes Array
@li Grain ID 1: The First grain the triangle belongs to
@li Grain ID 2: The Second grain the triangle belongs to

Each Triangle is shared between 2 grains.


@section sm_input Input File Format
The Surface Meshing module takes vtk structured grid files as input in either
ASCII or Binary formats. Although the VTK file format can be flexible the current
reader implementation being used is NOT. The following details the exact layout
of the header section of the VTK file. The Input file <b>must</b> share this exact
layout.
@subsection ascii_input_header ASCII VTK File Header
@code
1: # vtk DataFile Version 2.0
2: NRL TiBeta Stack
3: BINARY
4: DATASET STRUCTURED_POINTS
5: DIMENSIONS 1670 770 201
6: ORIGIN 0.00 0.00 0.00
7: SPACING 0.665 0.665 1.48
8: POINT_DATA 258465900
9:
10: SCALARS GrainID int  1
11: LOOKUP_TABLE default
12...: [ Data ]
@endcode

@subsection binary_input_header
@code
1: # vtk DataFile Version 2.0
2: data set from FFT2dx_GB
3: ASCII
4: DATASET STRUCTURED_POINTS
5: DIMENSIONS 189 201 100
6: ORIGIN 0.0 0.0 0.0
7: SPACING 0.25 0.25 0.25
8: POINT_DATA 3798900
9:
10: SCALARS GrainID int  1
11: LOOKUP_TABLE default
12: [ Data ]
@endcode




 */
