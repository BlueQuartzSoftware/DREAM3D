#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2009, 2010 Michael A. Jackson. BlueQuartz Software
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#-- This code was partly written under US Air Force Contract FA8650-07-D-5800
#--
#--////////////////////////////////////////////////////////////////////////////
project(StatsGenerator)
cmake_minimum_required(VERSION 2.8)

# ------------------------------------------------------------------------------
#  Qt 4 Section
# ------------------------------------------------------------------------------
if(QT4_FOUND)
    include( ${QT_USE_FILE} )
    CMP_COPY_QT4_RUNTIME_LIBRARIES( "QtSvg;QtScript")
    CMP_QT_LIBRARIES_INSTALL_RULES( "QtSvg;QtScript" "./")
else()
    message(FATAL_ERROR "Qt 4 is Needed for this project.")
endif(QT4_FOUND)

# ------------------------------------------------------------------------------
#  Qwt Section
# ------------------------------------------------------------------------------
find_package(Qwt)
if (QWT_FOUND)
    include_directories(${QWT_INCLUDE_DIR})
    CMP_COPY_DEPENDENT_LIBRARIES("qwt")
    CMP_LIBRARIES_INSTALL_RULES("qwt" "./")
else()
    message(FATAL_ERROR "Qwt is required for this project")
endif()

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

add_definitions(-DAIM_USE_QT)
                
                
set (StatsGenerator_SRCS 
    ${StatsGenerator_SOURCE_DIR}/main.cpp
    ${StatsGenerator_SOURCE_DIR}/SGApplication.cpp
    ${StatsGenerator_SOURCE_DIR}/StatsGen.cpp
    ${StatsGenerator_SOURCE_DIR}/StatsGeneratorUI.cpp
    ${StatsGenerator_SOURCE_DIR}/StatsGenPlotWidget.cpp
    ${StatsGenerator_SOURCE_DIR}/StatsGenODFWidget.cpp
    ${StatsGenerator_SOURCE_DIR}/SGAbstractTableModel.cpp
    ${StatsGenerator_SOURCE_DIR}/SGBetaTableModel.cpp
    ${StatsGenerator_SOURCE_DIR}/SGPowerLawTableModel.cpp
    ${StatsGenerator_SOURCE_DIR}/SGLogNormalTableModel.cpp
    ${StatsGenerator_SOURCE_DIR}/SGODFTableModel.cpp
    ${StatsGenerator_SOURCE_DIR}/SGMDFTableModel.cpp
    ${StatsGenerator_SOURCE_DIR}/SGPhase.cpp
    ${StatsGenerator_SOURCE_DIR}/EditPhaseDialog.cpp
    )
set (StatsGenerator_HDRS 
    ${StatsGenerator_SOURCE_DIR}/StatsGen.h
    ${StatsGenerator_SOURCE_DIR}/SGPhase.h
)
                   
SET( StatsGenerator_MOC_HDRS
    ${StatsGenerator_SOURCE_DIR}/SGApplication.h
    ${StatsGenerator_SOURCE_DIR}/StatsGeneratorUI.h
    ${StatsGenerator_SOURCE_DIR}/StatsGenPlotWidget.h
    ${StatsGenerator_SOURCE_DIR}/StatsGenODFWidget.h
    ${StatsGenerator_SOURCE_DIR}/SGAbstractTableModel.h
    ${StatsGenerator_SOURCE_DIR}/SGBetaTableModel.h  
    ${StatsGenerator_SOURCE_DIR}/SGPowerLawTableModel.h
    ${StatsGenerator_SOURCE_DIR}/SGLogNormalTableModel.h
    ${StatsGenerator_SOURCE_DIR}/SGBetaItemDelegate.h
    ${StatsGenerator_SOURCE_DIR}/SGLogNormalItemDelegate.h
    ${StatsGenerator_SOURCE_DIR}/SGPowerLawItemDelegate.h
    ${StatsGenerator_SOURCE_DIR}/SGODFTableModel.h
    ${StatsGenerator_SOURCE_DIR}/SGODFItemDelegate.h
    ${StatsGenerator_SOURCE_DIR}/SGMDFTableModel.h
    ${StatsGenerator_SOURCE_DIR}/SGMDFItemDelegate.h
    ${StatsGenerator_SOURCE_DIR}/EditPhaseDialog.h
    )
cmp_IDE_SOURCE_PROPERTIES( "AIM/StatsGenerator" "${StatsGenerator_HDRS};${StatsGenerator_MOC_HDRS}" "${StatsGenerator_SRCS}" ${PROJECT_INSTALL_HEADERS})

set (AIM_COMMON_QT_SRCS
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/ApplicationAboutBoxDialog.cpp
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QRecentFileList.cpp
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QR3DFileCompleter.cpp
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/ColorComboPicker.cpp
)
set (AIM_COMMON_QT_HDRS
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/ApplicationAboutBoxDialog.h
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QRecentFileList.h
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QR3DFileCompleter.h
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/ColorComboPicker.h     
)
cmp_IDE_SOURCE_PROPERTIES("AIM/Common/Qt" "${AIM_COMMON_QT_HDRS}" "${AIM_COMMON_QT_SRCS}" ${PROJECT_INSTALL_HEADERS})



    # The UI files As generated by Qt Designer
SET( StatsGenerator_UIS
  ${StatsGenerator_SOURCE_DIR}/UI_Files/StatsGeneratorUI.ui
  ${StatsGenerator_SOURCE_DIR}/UI_Files/StatsGenPlotWidget.ui
  ${StatsGenerator_SOURCE_DIR}/UI_Files/StatsGenODFWidget.ui
  ${StatsGenerator_SOURCE_DIR}/UI_Files/EditPhaseDialog.ui
  ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/UI_Files/ApplicationAboutBoxDialog.ui
)

# and finally any resource files
SET( StatsGenerator_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)


# -- Run MOC and UIC on the necessary files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${StatsGenerator_RCS} ${QRC_LICENSE_FILES})


# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${StatsGenerator_UIS} )


# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${StatsGenerator_MOC_HDRS} ${AIM_COMMON_QT_HDRS} )

#-- Put the generated files into their own group for IDEs
cmp_IDE_GENERATED_PROPERTIES("AIM/StatsGenerator/UI_Files" "${StatsGenerator_UIS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated_ui" "${Generated_UI_HDRS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated_moc" "${Generated_MOC_SRCS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated_qrc" "${QRC_LICENSE_FILES}" "${Generated_RC_SRCS};${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc")

# -- Finally set the Project Sources to include all the sources
SET (StatsGenerator_PROJECT_SRCS 
    ${StatsGenerator_SRCS}
    ${StatsGenerator_HDRS}
    ${StatsGenerator_MOC_HDRS}
    ${AIM_COMMON_QT_HDRS}
    ${AIM_COMMON_QT_SRCS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)


include_directories(${PROJECT_CODE_DIR})
include_directories(${HDF5_INCLUDE_DIR})
include_directories( ${StatsGenerator_SOURCE_DIR} )
include_directories( ${StatsGenerator_BINARY_DIR} )

IF(APPLE)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns)
ENDIF (APPLE)

IF(Q_WS_WIN)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/ico/${PROJECT_NAME}.ico)
ENDIF(Q_WS_WIN)

BuildQtAppBundle(
    TARGET ${PROJECT_NAME}
    SOURCES ${${PROJECT_NAME}_PROJECT_SRCS}
    DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
    ICON_FILE  ${APPLICATION_ICON}
    VERSION_MAJOR ${AIMRepresentation_VER_MAJOR}
    VERSION_MINOR ${AIMRepresentation_VER_MINOR}
    VERSION_PATCH ${AIMRepresentation_VER_PATCH}
    BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
    LINK_LIBRARIES ${QT_LIBRARIES} MXADataModel AIMCommon ${QWT_LIBRARIES}
    LIB_SEARCH_DIRS ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
#    QT_PLUGINS    ${QT_PLUGINS}
#    OTHER_PLUGINS ${OTHER_PLUGINS}
    COMPONENT     Applications
    INSTALL_DEST  "."
) 
