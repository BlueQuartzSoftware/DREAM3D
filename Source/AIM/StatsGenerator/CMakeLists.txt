project(StatsGeneratorUI)
cmake_minimum_required(VERSION 2.8)

# ------------------------------------------------------------------------------
#  Qt 4 Section
# ------------------------------------------------------------------------------
if(QT4_FOUND)
    include( ${QT_USE_FILE} )
    CMP_COPY_QT4_RUNTIME_LIBRARIES( "QtSvg;QtScript")
    CMP_QT_LIBRARIES_INSTALL_RULES( "QtSvg;QtScript" "./")
else()
    message(FATAL_ERROR "Qt 4 is Needed for this project.")
endif(QT4_FOUND)

# ------------------------------------------------------------------------------
#  Qwt Section
# ------------------------------------------------------------------------------
find_package(Qwt)
if (QWT_FOUND)
    include_directories(${QWT_INCLUDE_DIR})
    CMP_COPY_DEPENDENT_LIBRARIES("qwt")
    CMP_LIBRARIES_INSTALL_RULES("qwt" "./")
else()
    message(FATAL_ERROR "Qwt is required for this project")
endif()

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

add_definitions(-DAIM_USE_QT 
                -DSVG_3D_LIBRARY 
                -DSURFACE_MESH_LIBRARY
                -DSMOOTH_MESH_LIBRARY
                -DVOLUME_MESH_LIBRARY 
                -DUPDATE_EDGE_TRI_LIBRARY)
                
                
set (StatsGeneratorUI_SRCS 
    ${StatsGeneratorUI_SOURCE_DIR}/main.cpp
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGeneratorUI.cpp
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGenPlotWidget.cpp
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGen.cpp
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGenTableModel.cpp
    ${StatsGeneratorUI_SOURCE_DIR}/SGItemDelegate.cpp
)
set (StatsGeneratorUI_HDRS 
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGen.h
)
cmp_IDE_SOURCE_PROPERTIES( "Source/AIM/StatsGenerator" "${StatsGeneratorUI_HDRS}" "${StatsGeneratorUI_SRCS}" ${CMP_INSTALL_FILES})
                   
SET( StatsGeneratorUI_MOC_HDRS
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGeneratorUI.h
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGenPlotWidget.h
    ${StatsGeneratorUI_SOURCE_DIR}/StatsGenTableModel.h
    ${StatsGeneratorUI_SOURCE_DIR}/SGItemDelegate.h
)
cmp_IDE_SOURCE_PROPERTIES( "Source/AIM/StatsGenerator" "${StatsGeneratorUI_MOC_HDRS}" "${StatsGeneratorUI_SRCS}" ${CMP_INSTALL_FILES})

set (AIM_COMMON_QT_SRCS
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/AIMAboutBox.cpp
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QRecentFileList.cpp
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QR3DFileCompleter.cpp
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/ColorComboPicker.cpp
)
set (AIM_COMMON_QT_HDRS
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/AIMAboutBox.h
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QRecentFileList.h
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/QR3DFileCompleter.h
    ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/ColorComboPicker.h     
)
cmp_IDE_SOURCE_PROPERTIES("Source/AIM/Common/Qt" "${AIM_COMMON_QT_HDRS}" "${AIM_COMMON_QT_SRCS}" ${CMP_INSTALL_FILES})



    # The UI files As generated by Qt Designer
SET( StatsGeneratorUI_UIS
  ${StatsGeneratorUI_SOURCE_DIR}/UI_Files/StatsGeneratorUI.ui
  ${StatsGeneratorUI_SOURCE_DIR}/UI_Files/StatsGenPlotWidget.ui
  ${AIMRepresentation_SOURCE_DIR}/Source/AIM/Common/Qt/UI_Files/AIMAboutBox.ui
)

# and finally any resource files
SET( StatsGeneratorUI_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)


# -- Run MOC and UIC on the necessary files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${StatsGeneratorUI_RCS} )

# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${StatsGeneratorUI_UIS} )

# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${StatsGeneratorUI_MOC_HDRS} ${AIM_COMMON_QT_HDRS} )

#-- Put the generated files into their own group for IDEs
cmp_IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}" ${CMP_INSTALL_FILES})

# -- Finally set the Project Sources to include all the sources
SET (StatsGeneratorUI_PROJECT_SRCS 
    ${StatsGeneratorUI_SRCS}
    ${StatsGeneratorUI_HDRS}
    
    ${AIM_COMMON_QT_HDRS}
    ${AIM_COMMON_QT_SRCS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)


include_directories(${PROJECT_CODE_DIR})
include_directories(${HDF5_INCLUDE_DIR})
include_directories( ${StatsGeneratorUI_SOURCE_DIR} )
include_directories( ${StatsGeneratorUI_BINARY_DIR} )

#-- Set up OS X Application Bundle properties
#-- This file have tools for OS X Bunlde creation and configuration
INCLUDE (${CMP_OSX_TOOLS_SOURCE_DIR}/OSX_BundleTools.cmake)
SET (EXE_DEBUG_EXTENSION "_debug")
IF(APPLE)
 SET(GUI_TYPE MACOSX_BUNDLE)
 ConfigureMacOSXBundlePlist(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} 
                            ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns
                            ${AIMRepresentation_VERSION} )
ENDIF (APPLE)

IF(Q_WS_WIN)
    include_directories(${PROJECT_RESOURCES_DIR}/icons/ico)
    configure_file(${PROJECT_RESOURCES_DIR}/icons/ico/IconResource.rc.in ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc)
    SET (${PROJECT_NAME}_PROJECT_SRCS ${${PROJECT_NAME}_PROJECT_SRCS} ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc) 
    cmp_IDE_SOURCE_PROPERTIES ("ConfiguredFiles" "${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc" ""  ${CMP_INSTALL_FILES})
ENDIF(Q_WS_WIN)


# ---------- Build the Viewer Application  ----------------------
ADD_EXECUTABLE( ${PROJECT_NAME} ${GUI_TYPE} ${StatsGeneratorUI_PROJECT_SRCS} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
                        MXADataModel
                        AIMCommon
                        ${QT_LIBRARIES}
                        ${QWT_LIBRARIES}  )

cmp_InstallationSupport(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} ${StatsGeneratorUI_BINARY_DIR} "1")



