#pragma once

#include <QtCore/QString>

#define REMOVE_TEST_FILES 1

/* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 *
 * THIS FILE IS AUTO GENERATED AT CMAKE TIME. DO NOT EDIT THIS FILE. EDIT THE ORIGINAL TEMPLATE FILE
 * LOCATED AT @PLUGIN_NAME@/Test/TestFileLocations.h.in
 *
 *
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  */

namespace UnitTest
{
  inline const QString DataDir("@DREAM3D_DATA_DIR@");
  inline const QString TestTempDir("@TEST_TEMP_DIR@");
  inline const QString DREAM3DProjDir("@DREAM3DProj_SOURCE_DIR@");
  inline const QString OrientationAnalysisTestDataDir("@TEST_TEMP_DIR@");
  inline const QString OrientationAnalysisSourceDir("@PROJECT_CODE_DIR@/Plugins/@PLUGIN_NAME@");

  namespace EnsembleInfoReaderTest
  {
    inline const QString TestFileIni("@TEST_TEMP_DIR@/EnsembleInfoTest.ini");
    inline const QString TestFileTxt("@TEST_TEMP_DIR@/EnsembleInfoTest.txt");
    inline const QString TestFileDoc("@TEST_TEMP_DIR@/EnsembleInfoTest.doc");
  }

  namespace AngCachingTest
  {
    inline const QString Test1("@TEST_TEMP_DIR@/TestFile1.ang");
    inline const QString Test2("@TEST_TEMP_DIR@/TestFile2.ang");

    inline const QString TestInputFile1("@DREAM3D_DATA_DIR@/EbsdTestFiles/Test_HeaderCache-1.ang");
    inline const QString TestInputFile2("@DREAM3D_DATA_DIR@/EbsdTestFiles/Test_HeaderCache-2.ang");
  }

  namespace CtfCachingTest
  {
    inline const QString Test1("@TEST_TEMP_DIR@/TestFile1.ctf");
    inline const QString Test2("@TEST_TEMP_DIR@/TestFile2.ctf");

    inline const QString TestInputFile1("@DREAM3D_DATA_DIR@/EbsdTestFiles/Test_US_1.ctf");
    inline const QString TestInputFile2("@DREAM3D_DATA_DIR@/EbsdTestFiles/Test_US_2.ctf");
  }
  namespace MicCachingTest
  {

  }

  namespace AngleFileIOTest
  {
    inline const QString OutputFile("@TEST_TEMP_DIR@/AngleFile.txt");
  }

}

namespace UnitTest
{
  namespace OrientationUtilityTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
}

namespace UnitTest
{
  namespace Stereographic3DTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
}

namespace UnitTest
{
    namespace WriteIPFStandardTriangleTest
    {

    }
}

namespace UnitTest
{
    namespace CreateLambertSphereTest
    {
      inline const QString OutputFile("@TEST_TEMP_DIR@/LambertSphere.dream3d");
      inline const QString MasterPattern("@TESTFILES_SOURCE_DIR@/MasterPattern.png");
      inline const QString PipelineFile("@TESTFILES_SOURCE_DIR@/LambertSphere.json");
    }
}

namespace UnitTest
{
    namespace GenerateFZQuaternionsTest
    {
      inline const QString TestFile1("@TEST_TEMP_DIR@/GenerateFZQuaternionsTest1.dream3d");
      inline const QString TestFile2("@TEST_TEMP_DIR@/GenerateFZQuaternionsTest2.dream3d");
    }
}

namespace UnitTest
{
  namespace RodriguesConvertorTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
}

namespace UnitTest
{
  namespace GenerateQuaternionConjugateTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
}

namespace UnitTest
{
  namespace GenerateOrientationMatrixTransposeTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
}

namespace UnitTest
{
  namespace  ImportH5EspritDataTest
  {
    inline const QString OutputFile("@TEST_TEMP_DIR@/ImportH5EspritDataTest_OutputFile.dream3d");
    inline const QString InputFile("@DREAM3D_DATA_DIR@/EbsdTestFiles/H5EspritReaderTest.h5");
  }
}
