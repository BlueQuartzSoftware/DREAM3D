#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2012, Michael A. Jackson. BlueQuartz Software
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#--////////////////////////////////////////////////////////////////////////////

#///////////////////////////////////////////////////////////////////////////////
#// This code was partly written under US Air Force Contract FA8650-07-D-5800
#///////////////////////////////////////////////////////////////////////////////

project(FilterWidgetsLib)
cmake_minimum_required(VERSION 2.8.4)

set(Project_SRCS "")

set(FilterWidget_GEN_SRCS "")
set(FilterWidget_GEN_HDRS "")
# --------------------------------------------------------------------
#
# --------------------------------------------------------------------
Macro(WidgetGeneration DirName qrcGroupName)
    set(group ${DirName})
    file(APPEND ${CodeGeneratorFile} "//----- ${DirName} --------------- \n")
    file(APPEND ${HtmlDocQrcFile} "\n")
    # Make sure this directory is created.
    file(MAKE_DIRECTORY ${FilterWidgetsLib_BINARY_DIR}/${DirName}Widgets)
    set(DirName ${DirName})
    include(${PROJECT_CODE_DIR}/DREAM3DLib/${DirName}/SourceList.cmake)
    foreach(file ${${DirName}_FILTERS_HDRS})
        get_filename_component(name ${file} NAME_WE)
        message(STATUS "  Generating Widget For ${name}")
        if (NOT EXISTS ${FilterWidgetsLib_SOURCE_DIR}/${DirName}Widgets/Q${name}Widget.h )
            set(FilterWidget_GEN_HDRS ${FilterWidget_GEN_HDRS} ${FilterWidgetsLib_BINARY_DIR}/${DirName}Widgets/Q${name}Widget.h)
            set(FilterWidget_GEN_SRCS ${FilterWidget_GEN_SRCS} ${FilterWidgetsLib_BINARY_DIR}/${DirName}Widgets/Q${name}Widget.cpp)
            if ( NOT EXISTS ${FilterWidgetsLib_BINARY_DIR}/${DirName}Widgets/Q${name}Widget.h)
                set(GENERATED_MOC_SOURCE_FILE "moc_Q${name}Widget.cpp")
                configure_file(${FilterWidgetsLib_SOURCE_DIR}/QFilterWidget_Template.h.in
                              ${FilterWidgetsLib_BINARY_DIR}/${DirName}Widgets/Q${name}Widget.h)
                configure_file(${FilterWidgetsLib_SOURCE_DIR}/QFilterWidget_Template.cpp.in
                              ${FilterWidgetsLib_BINARY_DIR}/${DirName}Widgets/Q${name}Widget.cpp)
            endif()
        endif()

        file(APPEND ${HtmlDocQrcFile} "<file>${qrcGroupName}/${name}.html</file>\n")
        file(APPEND ${CodeGeneratorFile} "createHeaderFile<${name}>(\"${DirName}\", \"${name}\");\n")
        file(APPEND ${CodeGeneratorFile} "createSourceFile<${name}>(\"${DirName}\", \"${name}\");\n")
        file(APPEND ${CodeGeneratorFile} "createHTMLFile<${name}>(\"${DirName}\", \"${name}\");\n")

        file(APPEND ${RegisterKnownFilterWidgetsFile} "   QFilterWidgetFactory<Q${name}Widget>::Pointer q${name}WidgetFactory = QFilterWidgetFactory<Q${name}Widget>::New(); \n")
        file(APPEND ${RegisterKnownFilterWidgetsFile} "   FilterWidgetManager::Instance()->addFilterWidgetFactory(\"${name}\",q${name}WidgetFactory); \n\n")

        file(APPEND ${AllFilterWidgetsHeaderFile} "#include \"FilterWidgets/${DirName}Widgets/Q${name}Widget.h\"\n")
    endforeach()
endMacro()

# --------------------------------------------------------------------
# Create a File that will be used to generate a program that itself generates a
# QFilterWidget derived header for each of the filters based on thier exposed
# filter options
set(CodeGeneratorFile  ${FilterWidgetsLib_BINARY_DIR}/CodeGenerator.h)
file(WRITE ${CodeGeneratorFile} "")

# --------------------------------------------------------------------
# We are going to generate this file in the binary directory but not
# really use it currently. If you need to update the FilterDocs.qrc file
# then you can copy this generated file over the file that is in the source
# directory
set(HtmlDocQrcFile ${DREAM3DProj_BINARY_DIR}/Documentation/Filters/FilterDocs.qrc)
file(WRITE ${HtmlDocQrcFile} "<!-- This file is autogenerated during the CMake run so any new filters should get auto-added to this file.  -->\n")
file(APPEND ${HtmlDocQrcFile} "<!-- DO NOT EDIT THIS FILE. IT WILL BE OVER WRITTEN THE NEXT TIME CMAKE IS RUN  -->\n")
file(APPEND ${HtmlDocQrcFile} "<!DOCTYPE RCC>\n<RCC version=\"1.0\">\n<qresource>\n")


# --------------------------------------------------------------------
# Create a File that has all the headers for the various Filter Widgets
set(AllFilterWidgetsHeaderFile ${FilterWidgetsLib_BINARY_DIR}/FilterWidgetHeaders.h)
file(WRITE ${AllFilterWidgetsHeaderFile} "#ifndef _ALLFilterWidgetsLib_H_\n#define _ALLFilterWidgetsLib_H_\n")

# --------------------------------------------------------------------
# Create a File that will register all of the DREAM3D Filters
set(RegisterKnownFilterWidgetsFile ${FilterWidgetsLib_BINARY_DIR}/RegisterKnownFilterWidgets.cpp)
#file(WRITE ${RegisterKnownFilterWidgetsFile} "#ifndef _RegisterKnownFilterWidgetsFile_H_\n#define _RegisterKnownFilterWidgetsFile_H_\n\n")
file(WRITE ${RegisterKnownFilterWidgetsFile} "#include \"PipelineBuilder/FilterWidgetManager.h\"\n")
file(APPEND ${RegisterKnownFilterWidgetsFile} "#include \"QFilterWidgetFactory.hpp\"\n")
file(APPEND ${RegisterKnownFilterWidgetsFile} "#include \"FilterWidgetHeaders.h\"\n")
#file(APPEND ${RegisterKnownFilterWidgetsFile} "\n\nnamespace DREAM3D { \nnamespace QFilterFactory {\n")
file(APPEND ${RegisterKnownFilterWidgetsFile} "\nvoid FilterWidgetsLib::RegisterKnownQFilterWidgets()\n{\n")

set(ONLY_FILTERS 1)
WidgetGeneration(GenericFilters GenericFilters)
WidgetGeneration(IOFilters IOFilters)
WidgetGeneration(ProcessingFilters ProcessingFilters)
WidgetGeneration(ReconstructionFilters ReconstructionFilters)
WidgetGeneration(SamplingFilters SamplingFilters)
WidgetGeneration(StatisticsFilters StatisticsFilters)
WidgetGeneration(SurfaceMeshFilters SurfaceMesh_Filters)
WidgetGeneration(SyntheticBuilderFilters Synthetic_BuilderFilters)
WidgetGeneration(CustomFilters CustomFilters)


file(APPEND ${AllFilterWidgetsHeaderFile} "\n#endif\n")

file(APPEND ${RegisterKnownFilterWidgetsFile} "\n }\n")
#file(APPEND ${RegisterKnownFilterWidgetsFile} "\n}\n}\n #endif")

file(APPEND ${HtmlDocQrcFile} "</qresource>\n</RCC>\n")

# Read the file back into a string so we can configure our file
file(READ ${RegisterKnownFilterWidgetsFile} QFILTERWIDGET_FACTORY_SOURCE)
file(READ ${CodeGeneratorFile} CODE_GEN_FILTER_FUNCTION)
# Remove the temp files that we no longer need
file(REMOVE ${CodeGeneratorFile})

# --------------------------------------------------------------------
# Create our custom executable that will generate most of our QFilterWidget
# classes from information stored in the Filters themselves.
set(FILTER_HEADERS "#include \"DREAM3DLib/DREAM3DFilters.h\"")
set(FILTER_WIDGETS_TEMP_DIR ${FilterWidgetsLib_BINARY_DIR}/Temp)
set(FILTER_WIDGETS_BINARY_DIR ${FilterWidgetsLib_BINARY_DIR})
set(FILTER_WIDGETS_SOURCE_DIR ${FilterWidgetsLib_SOURCE_DIR})
set(FILTER_WIDGETS_DOCS_DIR ${DREAM3DProj_SOURCE_DIR}/Documentation/Filters)
set(FILTER_INCLUDE_PREFIX "DREAM3DLib")

file(MAKE_DIRECTORY ${FilterWidgetsLib_BINARY_DIR}/Temp)
configure_file( ${FilterWidgetsLib_SOURCE_DIR}/FilterWidgetsCodeGen.h.in
                ${FilterWidgetsLib_BINARY_DIR}/FilterWidgetCodeGen.h)
add_executable(FilterWidgetCodeGen  ${FilterWidgetsLib_SOURCE_DIR}/FilterWidgetCodeGen.cpp
                                    ${FilterWidgetsLib_BINARY_DIR}/FilterWidgetCodeGen.h)
target_link_libraries(FilterWidgetCodeGen MXA EbsdLib DREAM3DLib)


# Now run the code to generate the header files which will over write the place
# holder files that were generated from above
add_custom_command(TARGET FilterWidgetCodeGen POST_BUILD
                    COMMAND $<TARGET_FILE:FilterWidgetCodeGen> )


# --------------------------------------------------------------------
# Set some Include directories
include_directories(${FilterWidgetsLib_SOURCE_DIR}/..)
include_directories(${FilterWidgetsLib_SOURCE_DIR})
include_directories(${FilterWidgetsLib_BINARY_DIR})
include_directories(${DREAM3DProj_SOURCE_DIR}/Source/QtSupport)
include_directories(${DREAM3DProj_SOURCE_DIR}/Source/PipelineBuilder)


# --------------------------------------------------------------------
# Add in ONLY those headers and sources that need to have various Qt related
# utilities run against them
set(IOFILTER_WIDGET_HDRS
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QReadH5EbsdWidget.h
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QualityMetricTableModel.h
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QualityMetricItemDelegate.h
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QEbsdToH5EbsdWidget.h
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QEbsdReferenceFrameDialog.h
)
set(IOFILTER_WIDGET_SRCS
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QReadH5EbsdWidget.cpp
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QualityMetricTableModel.cpp
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QEbsdToH5EbsdWidget.cpp
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QEbsdReferenceFrameDialog.cpp
)
cmp_IDE_SOURCE_PROPERTIES( "FilterWidgets/IOFiltersWidgets" "${IOFILTER_WIDGET_HDRS}" "${IOFILTER_WIDGET_SRCS}" "0")
set(SYNTHETIC_WIDGET_HDRS
    ${FilterWidgetsLib_SOURCE_DIR}/SyntheticBuilderFiltersWidgets/QInitializeSyntheticVolumeWidget.h
)
set(SYNTHETIC_WIDGET_SRCS
    ${FilterWidgetsLib_SOURCE_DIR}/SyntheticBuilderFiltersWidgets/QInitializeSyntheticVolumeWidget.cpp
)
cmp_IDE_SOURCE_PROPERTIES( "FilterWidgets/SyntheticBuilderFiltersWidgets" "${SYNTHETIC_WIDGET_HDRS}" "${SYNTHETIC_WIDGET_SRCS}" "0")
set(SAMPLING_WIDGET_HDRS
    ${FilterWidgetsLib_SOURCE_DIR}/SamplingFiltersWidgets/QHex2SqrConverterWidget.h
)
set(SAMPLING_WIDGET_SRCS
    ${FilterWidgetsLib_SOURCE_DIR}/SamplingFiltersWidgets/QHex2SqrConverterWidget.cpp
)
cmp_IDE_SOURCE_PROPERTIES( "FilterWidgets/SamplingFiltersWidgets" "${SAMPLING_WIDGET_HDRS}" "${SAMPLING_WIDGET_SRCS}" "0")
set(QFilterWidget_HDRS
${IOFILTER_WIDGET_HDRS} ${SYNTHETIC_WIDGET_HDRS} ${SAMPLING_WIDGET_HDRS}
)

set(QFilterWidget_SRCS
${IOFILTER_WIDGET_SRCS} ${SYNTHETIC_WIDGET_SRCS} ${SAMPLING_WIDGET_SRCS}
)


# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( FilterWidgetsLib_Generated_MOC_SRCS ${FilterWidget_GEN_HDRS})
QT4_WRAP_CPP( FilterWidgetsLib_MOC_SRCS ${QFilterWidget_HDRS} )
# These generated moc files will be #include in the FilterWidget source file that
# are generated so we need to tell the build system to NOT compile these files
set_source_files_properties( ${FilterWidgetsLib_Generated_MOC_SRCS} PROPERTIES HEADER_FILE_ONLY TRUE)
set_source_files_properties( ${FilterWidgetsLib_MOC_SRCS} PROPERTIES HEADER_FILE_ONLY TRUE)

# -- Run MOC and UIC on the necessary files
QT4_ADD_RESOURCES( FilterWidgetsLib_Generated_RC_SRCS "${DREAM3DProj_SOURCE_DIR}/Documentation/Filters/FilterDocs.qrc"  )

# --------------------------------------------------------------------
# Continue on with our Qt4 section
QT4_WRAP_UI( FilterWidgetsLib_Generated_UI_HDRS
    ${FilterWidgetsLib_SOURCE_DIR}/SyntheticBuilderFiltersWidgets/QInitializeSyntheticVolumeWidget.ui
    ${FilterWidgetsLib_SOURCE_DIR}/SamplingFiltersWidgets/QHex2SqrConverterWidget.ui
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QReadH5EbsdWidget.ui
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QEbsdToH5EbsdWidget.ui
    ${FilterWidgetsLib_SOURCE_DIR}/IOFiltersWidgets/QEbsdReferenceFrameDialog.ui
)

# --------------------------------------------------------------------
#-- Put the Qt generated files into their own group for IDEs
cmp_IDE_SOURCE_PROPERTIES( "Generated/Qt_Moc" "" "${FilterWidgetsLib_Generated_MOC_SRCS};${FilterWidgetsLib_MOC_SRCS}" "0")
cmp_IDE_SOURCE_PROPERTIES( "Generated/Qt_Uic" "${FilterWidgetsLib_Generated_UI_HDRS}" "" "0")
cmp_IDE_SOURCE_PROPERTIES( "Generated/Qt_Qrc" "${FilterWidgetsLib_Generated_RC_SRCS}" "" "0")

# --------------------------------------------------------------------
# These files are generated by our custom command
cmp_IDE_SOURCE_PROPERTIES( "Generated/FilterWidgets" "${FilterWidget_GEN_HDRS}" "${FilterWidget_GEN_SRCS}" "0")

# --------------------------------------------------------------------
# Now add in any other headers or sources
set(FilterWidget_HDRS
    ${FilterWidgetsLib_SOURCE_DIR}/QFilterWidgetFactory.hpp
    ${FilterWidgetsLib_SOURCE_DIR}/FilterWidgetsLib.h
)

set(FilterWidget_SRCS
    ${FilterWidgetsLib_SOURCE_DIR}/FilterWidgetsLib.cpp
)
cmp_IDE_SOURCE_PROPERTIES( "FilterWidgets" "${FilterWidget_HDRS}" "${FilterWidget_SRCS}" "0")

set(Project_SRCS
        ${QFilterWidget_HDRS}
        ${QFilterWidget_SRCS}
        ${FilterWidget_HDRS}
        ${FilterWidget_SRCS}
        ${FilterWidget_GEN_HDRS}
        ${FilterWidget_GEN_SRCS}
        ${FilterWidgetsLib_MOC_SRCS}
        ${FilterWidgetsLib_Generated_MOC_SRCS}
        ${FilterWidgetsLib_Generated_UI_HDRS}
        ${FilterWidgetsLib_Generated_RC_SRCS}
)



if (UNIX AND NOT APPLE)
    set_source_files_properties(${Project_SRCS} PROPERTIES COMPILE_FLAGS -fPIC)
endif()

add_library(FilterWidgetsLib STATIC ${Project_SRCS})
target_link_libraries(FilterWidgetsLib
                    MXA
                    H5Support
                    EbsdLib
                    DREAM3DLib
                    ${QT_QTCORE_LIBRARY}
                    ${QT_QTGUI_LIBRARY}
                    QtSupport
                    PipelineBuilderLib
                    )
#set_target_properties(FilterWidgets PROPERTIES AUTOMOC TRUE)
#add_dependencies(FilterWidgetsLib_automoc FilterWidgetCodeGen)
add_dependencies(FilterWidgetsLib FilterWidgetCodeGen)
LibraryProperties( FilterWidgetsLib ${EXE_DEBUG_EXTENSION})
