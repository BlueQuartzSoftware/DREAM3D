#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2015 BlueQuartz Software, LLC
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#-- This code was partly written under US Air Force Contract FA8650-07-D-5800
#--
#--////////////////////////////////////////////////////////////////////////////
# set project's name
PROJECT( DREAM3D VERSION ${DREAM3DProj_VERSION_MAJOR}.${DREAM3DProj_VERSION_MINOR}.${DREAM3DProj_VERSION_PATCH})

# ---------- Setup output Directories -------------------------
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )

add_definitions(-DDREAM3D_USE_QT)

include_directories(${HDF5_INCLUDE_DIR}
                    ${QT_INCLUDE_DIR}/..
                    ${DREAM3D_SOURCE_DIR}
                    ${DREAM3D_BINARY_DIR}
                    ${PROJECT_CODE_DIR}
                    ${PROJECT_CODE_DIR}/Plugins
                    ${PROJECT_CODE_DIR}/QtSupportLib
                    ${DREAM3DProj_BINARY_DIR}/QtSupportLib
                    ${PROJECT_CODE_DIR}/DREAM3DWidgetsLib
                    ${PROJECT_CODE_DIR}/DREAM3DWidgetsLib/Widgets
                    ${DREAM3DProj_BINARY_DIR}/DREAM3DWidgetsLib/
                    )

# --------------------------------------------------------------------
# Generate the License File Headers
set(PROJECT_PREFIX "DREAM3D")
set(CMP_HEADER_DIR ${DREAM3D_BINARY_DIR})
set(CMP_CONFIGURATION_FILE_NAME "DREAM3DConfiguration.h")
set(CMP_TYPES_FILE_NAME "DREAM3DTypes.h")
set(CMP_VERSION_HEADER_FILE_NAME "DREAM3DVersion.h")
set(CMP_VERSION_SOURCE_FILE_NAME "DREAM3DVersion.cpp")
set(CMP_TOP_HEADER_FILE "DREAM3D.h")
set(CMP_PROJECT_NAMESPACE "${PROJECT_NAME}")
set(CMP_PROJECT_NAME "${PROJECT_NAME}")
set(CMP_ENABLE_PLUGINS "0")
set(CMP_LIB_SEARCH_DIRS "")
set(CMP_GENERATE_VERSION_STRING 1)
include(${CMP_SOURCE_DIR}/cmpProject.cmake)

cmpConfigureFileWithMD5Check(CONFIGURED_TEMPLATE_PATH ${DREAM3D_SOURCE_DIR}/DREAM3D.h.in
                            GENERATED_FILE_PATH ${DREAM3D_BINARY_DIR}/${CMP_TOP_HEADER_FILE})


include(${DREAM3DProj_SOURCE_DIR}/License/License.cmake)

include(${DREAM3DProj_SOURCE_DIR}/Source/Applications/Common/SourceList.cmake)

# List the source files here
set(DREAM3D_SRCS
  ${DREAM3D_SOURCE_DIR}/main.cpp
  ${DREAM3D_SOURCE_DIR}/DREAM3D_UI.cpp
  ${DREAM3D_SOURCE_DIR}/DSplashScreen.cpp
  ${DREAM3D_SOURCE_DIR}/AboutDREAM3D.cpp
  ${DREAM3D_SOURCE_DIR}/AboutPlugins.cpp
  ${DREAM3D_SOURCE_DIR}/PluginDetails.cpp
  ${DREAM3D_SOURCE_DIR}/DREAM3Dv6Wizard.cpp
  ${DREAM3D_SOURCE_DIR}/DREAM3DApplication.cpp
  ${DREAM3D_SOURCE_DIR}/DREAM3DMenu.cpp
  )

#------------------------------------------------------------------
# Headers that do NOT need to have moc run on them, i.e., non-QObject based headers
set(DREAM3D_HDRS
  ${DREAM3D_SOURCE_DIR}/DREAM3DConstants.h
)

#------------------------------------------------------------------
# Headers that do need to have moc run on them, i.e., QObject based headers
SET(DREAM3D_MOC_HDRS
  ${DREAM3D_SOURCE_DIR}/DREAM3D_UI.h
  ${DREAM3D_SOURCE_DIR}/DSplashScreen.h
  ${DREAM3D_SOURCE_DIR}/AboutDREAM3D.h
  ${DREAM3D_SOURCE_DIR}/AboutPlugins.h
  ${DREAM3D_SOURCE_DIR}/PluginDetails.h
  ${DREAM3D_SOURCE_DIR}/DREAM3Dv6Wizard.h
  ${DREAM3D_SOURCE_DIR}/DREAM3DApplication.h
  ${DREAM3D_SOURCE_DIR}/DREAM3DMenu.h
)
cmp_IDE_SOURCE_PROPERTIES( "DREAM3D" "${DREAM3D_HDRS};${DREAM3D_MOC_HDRS}" "${DREAM3D_SRCS}" ${PROJECT_INSTALL_HEADERS})

# The UI files As generated by Qt Designer
SET(DREAM3D_UIS
  ${DREAM3D_SOURCE_DIR}/UI_Files/DREAM3D_UI.ui
  ${DREAM3D_SOURCE_DIR}/UI_Files/AboutDREAM3D.ui
  ${DREAM3D_SOURCE_DIR}/UI_Files/AboutPlugins.ui
  ${DREAM3D_SOURCE_DIR}/UI_Files/PluginDetails.ui
  ${DREAM3D_SOURCE_DIR}/UI_Files/DREAM3Dv6Wizard.ui
)
cmp_IDE_GENERATED_PROPERTIES("DREAM3D/UI_Files" "${DREAM3D_UIS}" "")

# and finally any resource files
SET(DREAM3D_RCS
    ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc
    ${PROJECT_RESOURCES_DIR}/BrandedDREAM3D/branded_splash.qrc
)

# -- Run MOC and UIC on the necessary files
QT5_ADD_RESOURCES( DREAM3D_Generated_RC_SRCS ${DREAM3D_RCS} ${QRC_LICENSE_FILES})

# this will run uic on .ui files:
QT5_WRAP_UI( DREAM3D_Generated_UI_HDRS ${DREAM3D_UIS} ${AppsCommon_Widgets_UIS})

# and finally this will run moc:
#QT5_WRAP_CPP( DREAM3D_Generated_MOC_SRCS ${DREAM3D_MOC_HDRS} )

#-- Put the generated files into their own group for IDEs
cmp_IDE_GENERATED_PROPERTIES("Generated/ui" "${DREAM3D_Generated_UI_HDRS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated/moc" "${DREAM3D_Generated_MOC_SRCS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated/qrc" "${QRC_LICENSE_FILES}" "${DREAM3D_Generated_RC_SRCS}")

# -- Finally set the Project Sources to include all the sources
set(DREAM3D_PROJECT_SRCS
    ${DREAM3D_SRCS}
    ${DREAM3D_HDRS}
    ${DREAM3D_MOC_HDRS}
    ${DREAM3D_Generated_RC_SRCS}
    ${DREAM3D_Generated_UI_HDRS}
    ${DREAM3D_Generated_MOC_SRCS}
    ${DREAM3D_BINARY_DIR}/DREAM3D.h
    ${DREAM3D_BINARY_DIR}/DREAM3DVersion.h
    ${DREAM3D_BINARY_DIR}/DREAM3DVersion.cpp

    ${AppsCommon_Widgets_HDRS}
    ${AppsCommon_Widgets_SRCS}
    ${AppsCommon_Widgets_Generated_MOC_SRCS}
    ${AppsCommon_Widgets_Generated_UI_HDRS}
)


if(APPLE)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/icns/DREAM3D.icns)
endif(APPLE)

if(WIN32)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/ico/DREAM3D.ico)
ENDif(WIN32)

set(DEST_DIR ".")
if(UNIX AND NOT APPLE)
    set(DEST_DIR "bin")
endif()

file(READ ${CMP_PLUGIN_LIST_FILE} DREAM3D_PLUGINS)
file(READ ${DREAM3DProj_BINARY_DIR}/Qt_Plugins.txt QT_PLUGINS)

BuildQtAppBundle(
    TARGET DREAM3D
    SOURCES ${${PROJECT_NAME}_PROJECT_SRCS}
    DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
    ICON_FILE  ${APPLICATION_ICON}
    VERSION_MAJOR ${DREAM3D_VER_MAJOR}
    VERSION_MINOR ${DREAM3D_VER_MINOR}
    VERSION_PATCH ${DREAM3D_VER_PATCH}
    BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
    LINK_LIBRARIES H5Support EbsdLib SIMPLib QtSupportLib DREAM3DWidgetsLib
    LIB_SEARCH_DIRS ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
    QT_PLUGINS    ${QT_PLUGINS}
    QT5_MODULES   ${Qt5_COMPONENTS}
    OTHER_PLUGINS ${DREAM3D_PLUGINS}
    PLUGIN_LIST_FILE ${CMP_PLUGIN_LIST_FILE}
    COMPONENT     Applications
    INSTALL_DEST  ${DEST_DIR}
)


#-------------------------------------------------------------------------------
#- This copies all the Prebuilt Pipeline files into the Build directory so the help
#- works from the Build Tree
add_custom_target(PrebuiltPipelinesCopy ALL
            COMMAND ${CMAKE_COMMAND} -E copy_directory ${DREAM3D_SUPPORT_DIR}/PrebuiltPipelines
            ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_CFG_INTDIR}/PrebuiltPipelines/
            COMMENT "Copying Prebuilt Pipelines into Binary Directory")
set_target_properties(PrebuiltPipelinesCopy PROPERTIES FOLDER ZZ_COPY_FILES)

# Make Sure this target as part of the DREAM3D Build
# add_dependencies(DREAM3D PrebuiltPipelinesCopy)

#- This installs all the help files. Note that we assume a flat directory structure
#- in the "Help" folder, ie, all html files, images, etc are all in the "Help"
#- folder and NOT in any subfolders beyond that.
install(DIRECTORY ${DREAM3D_SUPPORT_DIR}/PrebuiltPipelines
        DESTINATION .
        COMPONENT Applications )

#-------------------------------------------------------------------------------
# Copy the Data Folder to the build directory

add_custom_target(DataFolderCopy ALL
            COMMAND ${CMAKE_COMMAND} -E copy_directory ${DREAM3D_DATA_DIR}/Data
            ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_CFG_INTDIR}/Data/
            COMMENT "Copying Data Folder into Binary Directory")
set_target_properties(DataFolderCopy PROPERTIES FOLDER ZZ_COPY_FILES)

#-------------------------------------------------------------------------------
# Make Sure the DataFolderCopy target is run before the DREAM3D target is built
# add_dependencies(DREAM3D DataFolderCopy)

# we want specific stats files to be bundled with the Application. The Ang data files
# are too large to be included and will be a separate download
SET(SYNTHETIC_STATS_FILES
              ${DREAM3D_DATA_DIR}/Data/Composite.dream3d
              ${DREAM3D_DATA_DIR}/Data/CubicSingleEquiaxed.dream3d
              ${DREAM3D_DATA_DIR}/Data/CubicSingleRolled.dream3d
              ${DREAM3D_DATA_DIR}/Data/HexagonalSingleEquiaxed.dream3d
              ${DREAM3D_DATA_DIR}/Data/TwoPhaseCubicHexParticlesEquiaxed.dream3d
  )

#- This installs all the Data files during a "make install" or "make package"
install(FILES ${SYNTHETIC_STATS_FILES}
        DESTINATION ./Data/
        COMPONENT Applications )

