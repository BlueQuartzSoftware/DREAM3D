#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2009, Michael A. Jackson. BlueQuartz Software
#--  Copyright (c) 2009, Michael Groeber, US Air Force Research Laboratory
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#-- This code was partly written under US Air Force Contract FA8650-07-D-5800
#--
#--////////////////////////////////////////////////////////////////////////////
# set project's name
PROJECT( DREAM3D )
cmake_minimum_required(VERSION 2.8.9)


# ---------- Setup output Directories -------------------------
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
if(WIN32)
 SET(GUI_TYPE WIN32)
ENDif(WIN32)

add_definitions(-DDREAM3D_USE_QT)

include_directories(${PROJECT_CODE_DIR}
                    ${PROJECT_CODE_DIR}/Plugins
                    ${HDF5_INCLUDE_DIR}
                    ${DREAM3D_SOURCE_DIR}
                    ${DREAM3D_BINARY_DIR}
                    ${PROJECT_CODE_DIR}/QtSupport
                    ${DREAM3DProj_BINARY_DIR}/QtSupport
                    ${PROJECT_CODE_DIR}/PipelineBuilder
                    ${DREAM3DProj_BINARY_DIR}/PipelineBuilder
                    )

# --------------------------------------------------------------------
# Generate the License File Headers
set(PROJECT_PREFIX "DREAM3D")
include(${DREAM3DProj_SOURCE_DIR}/License/License.cmake)

# List the source files here
set(DREAM3D_SRCS
    ${DREAM3D_SOURCE_DIR}/main.cpp
    ${DREAM3D_SOURCE_DIR}/DREAM3D_UI.cpp
  #  ${DREAM3D_SOURCE_DIR}/DREAM3DUpdateCheck.cpp
)

set(DREAM3D_HDRS
    ${DREAM3D_SOURCE_DIR}/DREAM3D_UI.h
    )
cmp_IDE_SOURCE_PROPERTIES( "DREAM3D" "${DREAM3D_HDRS}" "${DREAM3D_SRCS}" ${PROJECT_INSTALL_HEADERS})



SET(DREAM3D_MOC_HDRS
    ${DREAM3D_SOURCE_DIR}/DREAM3D_UI.h
 #   ${DREAM3D_SOURCE_DIR}/DREAM3DUpdateCheck.h
)

# The UI files As generated by Qt Designer
SET(DREAM3D_UIS
    ${DREAM3D_SOURCE_DIR}/UI_Files/DREAM3D_UI.ui
)
cmp_IDE_GENERATED_PROPERTIES("DREAM3D/UI_Files" "${DREAM3D_UIS}" "")

# and finally any resource files
SET(DREAM3D_RCS
    ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc
)

# -- Run MOC and UIC on the necessary files
QT4_ADD_RESOURCES( DREAM3D_Generated_RC_SRCS ${DREAM3D_RCS} ${QRC_LICENSE_FILES})

# this will run uic on .ui files:
QT4_WRAP_UI( DREAM3D_Generated_UI_HDRS ${DREAM3D_UIS} )

# and finally this will run moc:
QT4_WRAP_CPP( DREAM3D_Generated_MOC_SRCS ${DREAM3D_MOC_HDRS} )

#-- Put the generated files into their own group for IDEs
cmp_IDE_GENERATED_PROPERTIES("Generated/ui" "${DREAM3D_Generated_UI_HDRS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated/moc" "${DREAM3D_Generated_MOC_SRCS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated/qrc" "${QRC_LICENSE_FILES}" "${DREAM3D_Generated_RC_SRCS}")

# -- Finally set the Project Sources to include all the sources
set(DREAM3D_PROJECT_SRCS
    ${DREAM3D_SRCS}
    ${DREAM3D_HDRS}
    ${DREAM3D_Generated_RC_SRCS}
    ${DREAM3D_Generated_UI_HDRS}
    ${DREAM3D_Generated_MOC_SRCS}
)


if(APPLE)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/icns/DREAM3D.icns)
endif(APPLE)

if(Q_WS_WIN)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/ico/DREAM3D.ico)
ENDif(Q_WS_WIN)

set(DEST_DIR ".")
if(UNIX AND NOT APPLE)
    set(DEST_DIR "bin")
endif()

file(READ ${CMP_PLUGIN_LIST_FILE} DREAM3D_PLUGINS)
file(READ ${DREAM3DProj_BINARY_DIR}/Qt_Plugins.txt QT_PLUGINS)

BuildQtAppBundle(
    TARGET DREAM3D
    SOURCES ${${PROJECT_NAME}_PROJECT_SRCS}
    DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
    ICON_FILE  ${APPLICATION_ICON}
    VERSION_MAJOR ${DREAM3D_VER_MAJOR}
    VERSION_MINOR ${DREAM3D_VER_MINOR}
    VERSION_PATCH ${DREAM3D_VER_PATCH}
    BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
    LINK_LIBRARIES  MXA H5Support EbsdLib DREAM3DLib ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_LIBRARIES} QtSupport PipelineBuilderLib FilterWidgetsLib
    LIB_SEARCH_DIRS ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
    QT_PLUGINS    ${QT_PLUGINS}
    OTHER_PLUGINS ${DREAM3D_PLUGINS}
    PLUGIN_LIST_FILE ${CMP_PLUGIN_LIST_FILE}
    COMPONENT     Applications
    INSTALL_DEST  ${DEST_DIR}
)


#-------------------------------------------------------------------------------
#- This copies all the Prebuilt Pipeline files into the Build directory so the help
#- works from the Build Tree
add_custom_target(PrebuiltPipelinesCopy ALL
            COMMAND ${CMAKE_COMMAND} -E copy_directory ${DREAM3D_SUPPORT_DIR}/PrebuiltPipelines/
            ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/PrebuiltPipelines/
            COMMENT "Copying Prebuilt Pipelines into Binary Directory")

# Make Sure this target is built so that the DREAM3D Application has access to
# the HTML help files
add_dependencies(DREAM3D PrebuiltPipelinesCopy)

#- This installs all the help files. Note that we assume a flat directory structure
#- in the "Help" folder, ie, all html files, images, etc are all in the "Help"
#- folder and NOT in any subfolders beyond that.
install(DIRECTORY ${DREAM3D_SUPPORT_DIR}/PrebuiltPipelines
        DESTINATION .
        COMPONENT Applications )



#-------------------------------------------------------------------------------
# Copy the Data Folder to the build directory
add_custom_target(DataFolderCopy ALL
            COMMAND ${CMAKE_COMMAND} -E copy_directory ${DREAM3D_SUPPORT_DIR}/Data/
            ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/Data/
            COMMENT "Copying Data Folder into Binary Directory")

#-------------------------------------------------------------------------------
# Make Sure the DataFolderCopy target is run before the DREAM3D target is built
add_dependencies(DREAM3D DataFolderCopy)

#- This installs all the Data files during a "make install" or "make package"
install(DIRECTORY ${DREAM3D_SUPPORT_DIR}/Data
        DESTINATION .
        COMPONENT Applications )

