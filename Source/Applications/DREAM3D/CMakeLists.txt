#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2009, Michael A. Jackson. BlueQuartz Software
#--  Copyright (c) 2009, Michael Groeber, US Air Force Research Laboratory
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#-- This code was partly written under US Air Force Contract FA8650-07-D-5800
#--
#--////////////////////////////////////////////////////////////////////////////
# set project's name
PROJECT( DREAM3DApp )
cmake_minimum_required(VERSION 2.8)


# ---------- Setup output Directories -------------------------
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

add_definitions(-DDREAM3D_USE_QT 
                -DSVG_3D_LIBRARY 
                -DSURFACE_MESH_LIBRARY
                -DSMOOTH_MESH_LIBRARY
                -DVOLUME_MESH_LIBRARY 
                -DUPDATE_EDGE_TRI_LIBRARY)

include_directories(${PROJECT_CODE_DIR}
                    ${HDF5_INCLUDE_DIR}
                    ${DREAM3DApp_SOURCE_DIR}
                    ${DREAM3DApp_BINARY_DIR}
                    ${PROJECT_CODE_DIR}/QtSupport
                    ${DREAM3D_BINARY_DIR}/QtSupport)

# --------------------------------------------------------------------
# Generate the License File Headers
include(${DREAM3D_SOURCE_DIR}/License/License.cmake)

# List the source files here
SET (DREAM3DApp_SRCS
    ${DREAM3DApp_SOURCE_DIR}/main.cpp
    ${DREAM3DApp_SOURCE_DIR}/DREAM3D_UI.cpp
)

SET (DREAM3DApp_HDRS
    ${DREAM3DApp_SOURCE_DIR}/DREAM3D_UI.h
    )
cmp_IDE_SOURCE_PROPERTIES( "DREAM3DApp" "${DREAM3DApp_HDRS}" "${DREAM3DApp_SRCS}" ${PROJECT_INSTALL_HEADERS})


                    
SET( DREAM3DApp_MOC_HDRS
    ${DREAM3DApp_SOURCE_DIR}/DREAM3D_UI.h
)

# The UI files As generated by Qt Designer
SET( DREAM3DApp_UIS
    ${DREAM3DApp_SOURCE_DIR}/UI_Files/DREAM3D_UI.ui
)
cmp_IDE_GENERATED_PROPERTIES("DREAM3DApp/UI_Files" "${DREAM3DApp_UIS}" "")

# and finally any resource files
SET( DREAM3DApp_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# -- Run MOC and UIC on the necessary files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${DREAM3DApp_RCS} ${QRC_LICENSE_FILES})

# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${DREAM3DApp_UIS} )

# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${DREAM3DApp_MOC_HDRS} )

#-- Put the generated files into their own group for IDEs
cmp_IDE_GENERATED_PROPERTIES("Generated/ui" "${Generated_UI_HDRS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated/moc" "${Generated_MOC_SRCS}" "")
cmp_IDE_GENERATED_PROPERTIES("Generated/qrc" "${QRC_LICENSE_FILES}" "${Generated_RC_SRCS}")

# -- Finally set the Project Sources to include all the sources
SET (DREAM3DApp_PROJECT_SRCS 
    ${DREAM3DApp_SRCS}
    ${DREAM3DApp_HDRS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)


IF(APPLE)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/icns/DREAM3D.icns)
ENDIF (APPLE)

IF(Q_WS_WIN)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/ico/DREAM3D.ico)
ENDIF(Q_WS_WIN)

file(READ ${CMP_PLUGIN_LIST_FILE} DREAM3D_PLUGINS)

BuildQtAppBundle(
    TARGET DREAM3D
    SOURCES ${${PROJECT_NAME}_PROJECT_SRCS}
    DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
    ICON_FILE  ${APPLICATION_ICON}
    VERSION_MAJOR ${DREAM3D_VER_MAJOR}
    VERSION_MINOR ${DREAM3D_VER_MINOR}
    VERSION_PATCH ${DREAM3D_VER_PATCH}
    BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
    LINK_LIBRARIES ${QT_LIBRARIES} QtSupport
    LIB_SEARCH_DIRS ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
#    QT_PLUGINS    ${QT_PLUGINS}
    OTHER_PLUGINS ${DREAM3D_PLUGINS}
    COMPONENT     Applications
    INSTALL_DEST  "."
)   
