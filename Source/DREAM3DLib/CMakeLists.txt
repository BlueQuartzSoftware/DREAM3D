#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2009, Michael A. Jackson. BlueQuartz Software
#--  Copyright (c) 2009, Michael Groeber, US Air Force Research Laboratory
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#--////////////////////////////////////////////////////////////////////////////

#///////////////////////////////////////////////////////////////////////////////
#// This code was partly written under US Air Force Contract FA8650-07-D-5800
#///////////////////////////////////////////////////////////////////////////////

# set project's name
PROJECT( DREAM3DLib )
cmake_minimum_required(VERSION 2.8.3)

SET (DREAM3DLib_BUILT_AS_DYNAMIC_LIB)
IF (BUILD_SHARED_LIBS)
    SET (DREAM3DLib_BUILT_AS_DYNAMIC_LIB 1)
    IF (WIN32)
        ADD_DEFINITIONS("-DDREAM3DLib_BUILT_AS_DYNAMIC_LIB")
    ENDIF (WIN32)
ENDIF (BUILD_SHARED_LIBS)

option(DREAM3D_DISABLE_MSVC_WARNINGS "Disable some MSVC Compiler warnings" OFF)
IF (DREAM3D_DISABLE_MSVC_WARNINGS)
    add_definitions(-DDREAM3D_DISABLE_MSVC_WARNINGS)
endif()

SET (PROJECT_PREFIX "DREAM3D" CACHE STRING "The Prefix to be used for Preprocessor definitions")
set (PROJECT_INSTALL_HEADERS 0)
#-------------------------------------------------------------------------------
# Include the cmp project to perform all the basic configuration tests for the 
# project.
#------------------------------------------------------------------------------- 
set (CMP_HEADER_DIR ${DREAM3DLib_BINARY_DIR})
set (CMP_CONFIGURATION_FILE_NAME "DREAM3DConfiguration.h")
set (CMP_TYPES_FILE_NAME "DREAM3DLibTypes.h")
set (CMP_VERSION_HEADER_FILE_NAME "DREAM3DVersion.h")
set (CMP_VERSION_SOURCE_FILE_NAME "DREAM3DVersion.cpp")
set (CMP_TOP_HEADER_FILE "DREAM3DLib.h")
set (CMP_PROJECT_NAMESPACE "${PROJECT_NAME}")
set (CMP_PROJECT_NAME "${PROJECT_NAME}")
set (CMP_ENABLE_PLUGINS "0")
set (CMP_LIB_SEARCH_DIRS "")
set (CMP_GENERATE_VERSION_STRING 1)


INCLUDE (${CMP_SOURCE_DIR}/cmpProject.cmake)
configure_file(${DREAM3DLib_SOURCE_DIR}/DREAM3DConfiguration.h.in
               ${DREAM3DProj_BINARY_DIR}/DREAM3DLib/${CMP_TOP_HEADER_FILE})

cmp_IDE_GENERATED_PROPERTIES("Generated" 
                             "${CMP_HEADER_DIR}/${CMP_TOP_HEADER_FILE};${CMP_HEADER_DIR}/${CMP_TYPES_FILE_NAME};${CMP_HEADER_DIR}/${CMP_CONFIGURATION_FILE_NAME};${CMP_HEADER_DIR}/${CMP_VERSION_HEADER_FILE_NAME}"
                             "${CMP_HEADER_DIR}/${CMP_VERSION_SOURCE_FILE_NAME}")
                             
set(Project_SRCS 
    ${CMP_HEADER_DIR}/${CMP_TOP_HEADER_FILE}
    ${CMP_HEADER_DIR}/${CMP_TYPES_FILE_NAME}
    ${CMP_HEADER_DIR}/${CMP_CONFIGURATION_FILE_NAME}
    ${CMP_HEADER_DIR}/${CMP_VERSION_HEADER_FILE_NAME}
    ${CMP_HEADER_DIR}/${CMP_VERSION_SOURCE_FILE_NAME}
)

Macro(D3DCompileDir DirName)
    include(${DREAM3DLib_SOURCE_DIR}/${DirName}/SourceList.cmake)
    set (Project_SRCS ${Project_SRCS} ${DREAM3DLib_${DirName}_SRCS} ${DREAM3DLib_${DirName}_HDRS})
endMacro()

# Add in our NON-Filter classes
D3DCompileDir(Common)
D3DCompileDir(DistributionAnalysisOps)
D3DCompileDir(HDF5)
D3DCompileDir(OrientationOps )
D3DCompileDir(ShapeOps )
D3DCompileDir(VTKUtils )


#--------
# Create a header file that contains all the filters
Macro(D3DCompileFilters DirName HeaderFile)
    set(group ${DirName})
    file(APPEND ${HeaderFile} "\n/* ------ ${group} --------- */\n")
    
    include(${DREAM3DLib_SOURCE_DIR}/${DirName}/SourceList.cmake)
    set (Project_SRCS ${Project_SRCS} ${DREAM3DLib_${DirName}_SRCS} ${DREAM3DLib_${DirName}_HDRS})
    foreach(file ${${DirName}_FILTERS_HDRS})
        get_filename_component(name ${file} NAME_WE)
        file(APPEND ${HeaderFile} "#include \"DREAM3DLib/${DirName}/${name}.h\"\n")
    endforeach()
endMacro()

set (AllFiltersHeaderFile ${DREAM3DLib_BINARY_DIR}/DREAM3DFilters.h)
file(WRITE ${AllFiltersHeaderFile} "#ifndef _DREAM3D_FILTERS_H_\n#define _DREAM3D_FILTERS_H_\n\n")

# Add in our Filter classes
D3DCompileFilters(IOFilters         ${AllFiltersHeaderFile})
D3DCompileFilters(GenericFilters    ${AllFiltersHeaderFile})
D3DCompileFilters(ReconstructionFilters ${AllFiltersHeaderFile})
D3DCompileFilters(ProcessingFilters ${AllFiltersHeaderFile})
D3DCompileFilters(SamplingFilters   ${AllFiltersHeaderFile})
D3DCompileFilters(StatisticsFilters ${AllFiltersHeaderFile})
D3DCompileFilters(SurfaceMeshFilters ${AllFiltersHeaderFile})
D3DCompileFilters(SyntheticBuilderFilters ${AllFiltersHeaderFile})
D3DCompileFilters(CustomFilters ${AllFiltersHeaderFile})


file(APPEND ${AllFiltersHeaderFile} "\n#endif\n")

#--------------------------
include_directories( ${HDF5_INCLUDE_DIR} )
include_directories( ${PROJECT_CODE_DIR} )
include_directories( ${DREAM3DLib_BINARY_DIR} )


#-- Add a library for the DREAM3DLib Code
add_library(${PROJECT_NAME} ${LIB_TYPE} ${Project_SRCS} )
target_link_libraries(${PROJECT_NAME} MXA EbsdLib ${TBB_LIBRARIES} )
LibraryProperties( ${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} )

set(install_dir "tools")
set(lib_install_dir "lib")
if (WIN32)
    set (install_dir ".")
    set(lib_install_dir "")
endif()


if (BUILD_SHARED_LIBS  AND NOT APPLE)
    INSTALL(TARGETS ${PROJECT_NAME} 
        COMPONENT Applications
        RUNTIME DESTINATION ${install_dir}
        LIBRARY DESTINATION ${lib_install_dir}
        ARCHIVE DESTINATION ${lib_install_dir}       
        BUNDLE DESTINATION "."
    ) 
endif() 

  