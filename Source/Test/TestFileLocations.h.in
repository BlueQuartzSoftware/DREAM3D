#ifndef _TestFileLocation_h_
#define _TestFileLocation_h_
#include <string>

#define REMOVE_TEST_FILES 0

namespace UnitTest {

    const std::string DataDir("@DREAM3D_DATA_DIR@");
  
    // -----------------------------------------------------------------------------
    //  Define where to put our temporary files for the H5Utilities Test
    // -----------------------------------------------------------------------------
    namespace H5UtilTest
    {
      const std::string TestDir("H5UtilTest");
      const std::string FileName("@DREAM3DTest_BINARY_DIR@/H5Utilities_Test.h5");
      const std::string GroupTest("@DREAM3DTest_BINARY_DIR@/H5Utilities_GroupTest.h5");
    }
    
    // -----------------------------------------------------------------------------
    //  Define where to put our temporary files for the H5Lite Test
    // -----------------------------------------------------------------------------
    namespace H5LiteTest
    {
      const std::string TestDir("@DREAM3DTest_BINARY_DIR@/H5LiteTest");
      const std::string FileName("@DREAM3DTest_BINARY_DIR@/H5Lite_Test.h5");
      const std::string LargeFile("@DREAM3DTest_BINARY_DIR@/H5Lite_LargeFile_Test.h5");
    }
    
    namespace DxIOTest
    {
      static const std::string TestFile("@DREAM3DTest_BINARY_DIR@/DxIOTest.dx");
      static const size_t XSize = 3;
      static const size_t YSize = 4;
      static const size_t ZSize = 5;
      static const size_t Offset = 100;
    }
    
    namespace PhIOTest
    {
      const std::string TestFile("@DREAM3DTest_BINARY_DIR@/PhIOTest.ph");
      static const size_t XSize = 5;
      static const size_t YSize = 4;
      static const size_t ZSize = 3;
      static const size_t Offset = 200;
    }
    
    namespace VtkGrainIdIOTest
    {
      const std::string TestFile("@DREAM3DTest_BINARY_DIR@/VtkGrainIdIOTest.vtk");
      static const size_t XSize = 5;
      static const size_t YSize = 4;
      static const size_t ZSize = 3;
      static const size_t Offset = 300;
    }
    
    namespace VTKFileWritersTest
    {
      static const std::string TestFile("@DREAM3DTest_BINARY_DIR@/VtkIOTest.vtk");
      static const size_t XSize = 2;
      static const size_t YSize = 10;
      static const size_t ZSize = 5;
      static const size_t Offset = 66;
    }
    
    namespace NeighborListTest
    {
      const std::string TestDir("@DREAM3DTest_BINARY_DIR@/NeighborListTest");
    }
    
    namespace SyntheticBuilderTest
    {
      const std::string TestDir("@DREAM3DTest_BINARY_DIR@/SyntheticBuilderTest");
      const std::string CsvFile("@DREAM3DTest_BINARY_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.csv");
      const std::string OutputFile("@DREAM3DTest_BINARY_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.h5");
      const std::string VtkOutputFile("@DREAM3DTest_BINARY_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.vtk");

    }
    
    namespace FindNeighborTest
    {
      const std::string TestDir("@DREAM3DTest_BINARY_DIR@/FindNeighborTest");
      const std::string OutputFile("@DREAM3DTest_BINARY_DIR@/FindNeighborTest/FindNeighborTest.h5");
      const std::string VtkOutputFile("@DREAM3DTest_BINARY_DIR@/FindNeighborTest/FindNeighborTest.vtk");
    }
    
    namespace DataContainerIOTest
    {
      static const size_t Offset = 800;
      static const size_t XSize = 5;
      static const size_t YSize = 4;
      static const size_t ZSize = 3;
      const std::string TestDir("@DREAM3DTest_BINARY_DIR@/DataContainerIOTest");
      const std::string TestFile("@DREAM3DTest_BINARY_DIR@/DataContainerIOTest/DataContainerIOTest.h5");
    }
 
    namespace StatsDataTest
    {
      const std::string TestDir("@DREAM3DTest_BINARY_DIR@/StatsDataTest");
      const std::string TestFile("@DREAM3DTest_BINARY_DIR@/StatsDataTest/StatsDataTest.h5");
    }
}

#endif
