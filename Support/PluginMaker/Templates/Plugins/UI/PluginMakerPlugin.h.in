/* Insert your Open Source license Choice, Distribution Statement or
* any other statement that dictates the type of distribution this
* plugin code can have.
*/


#ifndef @PluginName@Plugin_H_
#define @PluginName@Plugin_H_

#include <QtCore/QObject>
#include <QtCore/QSettings>
#include <QtCore/QUrl>
#include "QtSupport/DREAM3DPluginInterface.h"

class @PluginName@Widget;
class AIMPluginFrame;

DREAM3D_PLUGIN_CONSTANTS(@PluginName@, @PluginName@)
/**
 * @class @PluginName@Plugin @PluginName@Plugin.h UIPlugins/@PluginName@Plugin.h
 * @brief
 * @author 
 * @date 
 * @version 1.0
 */
class @PluginName@Plugin : public QObject, public DREAM3DPluginInterface
{
    Q_OBJECT;
    Q_INTERFACES(DREAM3DPluginInterface)

  public:
    @PluginName@Plugin();
    virtual ~@PluginName@Plugin();

    QString getPluginName();

    virtual QWidget* getInputWidget(QWidget* parent);
    virtual AIMPluginFrame* getPluginFrame(QWidget* parent);


    virtual void writeSettings(QSettings &prefs);
    virtual void readSettings(QSettings &prefs);

    virtual QIcon icon();
    virtual QUrl htmlHelpIndexFile();

  public slots:
    virtual void displayHelp();

    signals:
      void showHelp(QUrl);
    
  protected:
    @PluginName@Widget* m_InputWidget;

  private:
    @PluginName@Plugin(const @PluginName@Plugin&); // Copy Constructor Not Implemented
    void operator=(const @PluginName@Plugin&); // Operator '=' Not Implemented
};

#endif /* @PluginName@Plugin_H_ */
