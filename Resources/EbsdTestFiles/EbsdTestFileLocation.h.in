#ifndef _EbsdTestFileLocation_h_
#define _EbsdTestFileLocation_h_

#include <QtCore/QString>

#define REMOVE_TEST_FILES 1


namespace EbsdImportTest {
  const QString FileDir("@PROJECT_RESOURCES_DIR@/EbsdTestFiles/");
  const QString TestFile1("Test_1.ang");
  const QString TestFile2("Test_2.ang");
  const QString TestFile3("Test_3.ang");
  const QString H5EbsdOutputFile("@DREAM3DTest_BINARY_DIR@/FromAng.h5ebsd");
  const QString MissingHeader1("@PROJECT_RESOURCES_DIR@/EbsdTestFiles/MissingHeader_1.ang");
  const QString GridMissing("@PROJECT_RESOURCES_DIR@/EbsdTestFiles/GridMissing.ang");
  const QString MissingHeader3("@PROJECT_RESOURCES_DIR@/EbsdTestFiles/MissingHeader_3.ang");
  const QString HexHeader("@PROJECT_RESOURCES_DIR@/EbsdTestFiles/HexHeader.ang");
  const QString ShortFile("@PROJECT_RESOURCES_DIR@/EbsdTestFiles/ShortFile.ang");
}

namespace UnitTest
{

  namespace CtfReaderTest
  {
    const QString FileDir("@EBSD_REFERENCE_DATA_DIR_NATIVE@");
    const QString EuropeanInputFile1("@EBSD_REFERENCE_DATA_DIR_NATIVE@Test_European_1.ctf");
    const QString USInputFile1("@EBSD_REFERENCE_DATA_DIR_NATIVE@Test_US_1.ctf");
    const QString EuropeanInputFile2("@EBSD_REFERENCE_DATA_DIR_NATIVE@Test_European_2.ctf");
    const QString USInputFile2("@EBSD_REFERENCE_DATA_DIR_NATIVE@Test_US_2.ctf");
    const QString Corrupted_XCells("@EBSD_REFERENCE_DATA_DIR_NATIVE@Corrupted_XCells.ctf");
    const QString ShortFile("@EBSD_REFERENCE_DATA_DIR_NATIVE@ShortFile.ctf");
    const QString ZeroXYCells("@EBSD_REFERENCE_DATA_DIR_NATIVE@ZeroXYCells.ctf");

    const QString H5EbsdOutputFile("@DREAM3DTest_BINARY_DIR@/FromCtf.h5ebsd");
  }

}


#endif
